//===== rAthena Script =======================================
//= Kafra Functions
//===== By: ==================================================
//= 
//===== Current Version: =====================================
//= 
//===== Compatible With: =====================================
//= rAthena Project
//===== Description: =========================================
//= These functions handle save, storage, cart rental, teleport,
//= and Free Teleport/Warp/Rent Cart options for all Kafra NPCs.
//=
//= Kafra's will need a lot of work. The Welcome Message argument
//= may become obsolete, as most kafras have a slightly differing
//= Welcome message.
//===== Additional Comments: =================================
//=
//============================================================

//=== Main Function ========================================================
//=   arg(0): Used to determine which welcome message to show.
//=   arg(1): Used to determine which menu to display.
//=   arg(2): Used to determine if the info menu is shown in F_KafInfo.
//=   arg(3): Cost to use Storage
//=   arg(4): Cost to Rent a Pushcart
//==========================================================================
function	script	F_Kafra	{
	callfunc "F_ClearGarbage"; // Clear outdated, unused variables
	.@welcome = getarg(0);
	.@menu_num = getarg(1);

	// Display Kafra Welcome Message
	switch(.@welcome) {
	default:// Default message (obsolete)
		mes "[Kafra Employee]";
		mes "Bienvenido a";
		mes "Kafra Corporation.";
		mes "Los servicios de Kafra";
		mes "siempre estarán de tu lado.";
		mes "¿Cómo puedo ayudarte?";
		break;
	case 1:// Niflheim specific message
		mes "[Kafra Employee]";
		mes "^666666B-biiiieennveni-ii-ddo";
		mes "a K-kaaafrrrra";
		mes "C-coorpoor-r-ratioooonn...^000000";
		break;
	case 2:// Guild Castle Kafra message
		mes "[Kafra Employee]";
		mes "Bienvenido miembro de ^ff0000" + getguildname( getcharid(2) ) + "^000000.";
		mes "Kafra Coporation siempre estará donde vayas.";
		break;
	case 3:// Amatsu specific message (obsolete)
		mes "[Kafra Employee]";
		mes "Entonces, has venido muy lejos para estudiar esta cultura, o sólo estas mirando?";
		mes "En ambos casos, porque no tomas un tiempo?";
		mes "El aire aquí realmente es espectacular";
		mes "mezclado con la esencia de las flores.";
		break;
	case 4:// Luoyang and Ayothaya specific message (obsolete)
		mes "[Kafra Employee]";
		mes "Con los servicios de Kafra,";
		mes "aunque estes muy lejos,";
		mes "siempre estarás en casa.";
		break;
	case 5:// NPC has it's own welcome message. (Display nothing)
		break;
	}
	next;
	if (.@welcome == 2)// Guild Kafra Menu override (free Teleport, free Storage, Free Cart)
		setarray .@K_Menu0$[0], "Abrir Storage", "Abrir Guild Storage", "Rentar un carro", "Servicios teletransporte", "Cancelar";
	else {
		switch(.@menu_num) {
			// Save and Storage only
			case 1:	setarray .@K_Menu0$[0],"Guardar","Abrir Storage","Cancelar"; break;
			// Storage only
			case 2:	setarray .@K_Menu0$[0],"Abrir Storage","Cancelar"; break;
			// No Teleport (Common)
			case 3: setarray .@K_Menu0$[0],"Guardar","Abrir Storage","Rentar un carro","Otras informaciones","Cancelar"; break;
			// Case 4 is Einbroch no tele message.
			// No save, or teleport. (Common)
			case 5:	setarray .@K_Menu0$[0],"Abrir Storage","Rentar un carro","Otras informaciones","Cancelar"; break;
			// Storage and Check Other Information only.
			case 6:	setarray .@K_Menu0$[0],"Abrir Storage","Otras informaciones","Cancelar"; break;
			// Save, Storage, and Pushcart only (Kafra Warehouse)
			case 7:	setarray .@K_Menu0$[0],"Guardar","Abrir Storage","Rentar un carro","Cancelar"; break;
			// Save, Storage, Other Check information. (Turbo track)
			case 8: setarray .@K_Menu0$[0],"Guardar","Abrir Storage","Otras informaciones","Cancelar"; break;
			// No Save (Rune Knight)
			case 9: setarray .@K_Menu0$[0],"Abrir Storage","Rentar un carro","Servicios teletransporte","Otras informaciones","Cancelar"; break;
			// Storage, Save, and Pushcart (Dewata, reorder of case 7)
			case 10: setarray .@K_Menu0$[0],"Abrir Storage","Guardar","Rentar un carro","Cancelar"; break;
			// Default message (obsolete)
			default: setarray .@K_Menu0$[0],"Guardar","Abrir Storage","Abrir Storage VIP","Servicios teletransporte","Rentar un carro","Otras informaciones","Abrir Guild Storage","Cancelar"; break;
		}
	}
	.@menu$ = implode(.@K_Menu0$,":");
	while (true) {
		.@j = select(.@menu$) - 1;
		if (.@K_Menu0$[.@j] == "Guardar")
			return;
		else if (.@K_Menu0$[.@j] == "Abrir Storage") {
			if (.@welcome == 2)// Do not charge for Guild Storage
				callfunc "F_KafStor",2,0,0;
			else
				callfunc "F_KafStor",0,getarg(3),.@welcome;
			next;
		}
		else if (.@K_Menu0$[.@j] == "Abrir Storage VIP") {
			if (vip_status(VIP_STATUS_ACTIVE)) {
				mes "[Kafra Employee]";
				mes "Abriré tu storage premium.";
				mes "Gracias por usar nuestros servicios.";
				close2;
				cutin "", 255;
				openstorage2 1,STOR_MODE_GET|STOR_MODE_PUT;
				end;
			} else {
				mes "[Kafra Employee]";
				mes "Lo siento, tu tiempo ha expirado.";
				mes "Abriré tu storage, pero no podrás guardar objetos.";
				close2;
				cutin "", 255;
				openstorage2 1,STOR_MODE_GET;
				end;
			}
		}
		else if (.@K_Menu0$[.@j] == "Servicios teletransporte") {
			if (.@menu_num != 4)// Display Einbroch "No Teleport Service" notice.
				callfunc "F_KafTele",.@welcome;
			else {
				mes "[Kafra Employee]";
				mes "Debido al tratado de ^FF0000Limites";
				mes "Teletransporte^000000, en";
				mes "Kafra Corporation no";
				mes "podemos proveer los servicios de teletransporte";
				mes "en la República de Schwarzwald.";
				next;
				mes "[Kafra Employee]";
				mes "Te recomendamos usar los servicios";
				mes "del diribigle";
				mes "Gracias por comprender la situación";
			}
			next;
		}
		else if (.@K_Menu0$[.@j] == "Rentar un carro") {
			if (callfunc("F_KafCart",.@welcome,getarg(4)) == 1)
				next;
		}
		else if (.@K_Menu0$[.@j] == "Otras informaciones") {
			callfunc "F_KafInfo",getarg(2);
			next;
		}
		else if (.@K_Menu0$[.@j] == "Cancelar") {
			callfunc "F_KafEnd",.@welcome,0;
			end;
		}
		else if (.@K_Menu0$[.@j] == "Abrir Guild Storage") {
			callfunc "F_KafStor",1,0;
			next;
		}
	}
}

//===================================================
// Storage Function
//===================================================
function	script	F_KafStor	{
	.@type = getarg(0);
	.@fee = getarg(1);

	// Unable to access Guild Storage (Busy)
	if (.@type == 1) {
		if (guildopenstorage()) {
			mes "[Kafra Employee]";
			mes "Lo siento, pero otro miembro de la guild está usando el Guild storage";
			mes "Espera hasta que finalice para tratar nuevamente.";
			close3;
		}
		cutin "", 255;
		close;
	}
	// Unable to access Normal Storage (Insufficient Basic Skills)
	if (!callfunc("F_CanOpenStorage")) {
		mes "[Kafra Employee]";
		// Niflheim Specific Message
		if (getarg(2) == 1) {
			mes "^666666S-s-ssoooorry,";
			mes "t-u  er-es u-u-uun";
			mes "Nooviiice... N-neeecesitas";
			mes "B-basic sssskill l-level 6...^000000";
			return;
		}
		mes "Lo siento, pero";
		mes "eres un Novice";
		mes "Basic Skill Level 6 para";
		mes "abrir el Storage.";
		return;
	}
	// Accessing Normal Storage (Skipped if accessing Storage from Guild castle)
	if (.@type != 2) {
		// Consume "Free Ticket for Kafra Storage" if available.
		if (countitem(7059))
			delitem 7059,1;
		else {
			if (Zeny < .@fee) {
				mes "[Kafra Employee]";
				// Niflheim Specific Message
				if (getarg(2) == 1) {
					percentheal -50,-50;
					mes "^666666Zeeeeeny...";
					mes "M-mas z-zeny...!";
					mes "N-neecesiitas 150... zeny...";
					mes "Ergh! B-eebere-eee tu saa-angre-eee~!^000000";
					return;
				}
				// Standard Message
				mes "Lo siento, pero no tienes";
				mes "suficiente zeny para";
				mes "abrir el Storage. Nuestra";
				mes "comisión es de " + .@fee + " zeny.";
				return;
			}
			Zeny -= .@fee;
			RESRVPTS += (.@fee/5);
		}
	}

	// Surpress the "End" message if in guild castle.
	if (.@type != 2) {
		// Niflheim specific Message
		if (getarg(2) == 1) {
			percentheal 0,-10;
			mes "[Kafra Employee]";
			for ( .@i = 0; .@i < 5; .@i++ )
				mes "^666666Gracias.. por... usar...^000000";
		}
		// Normal message
		else {
			mes "[Kafra Employee]";
			mes "Aquí tienes, dejame abrir";
			mes "tu Storage.";
			mes "Gracias por usar nuestros";
			mes "servicios.";
		}
	}
	callfunc("F_CheckKafCode");	//check your storage password, if set
	close2;
	openstorage;
	cutin "", 255;
	end;
}

//===================================================
// Teleport Function
//===================================================
function	script	F_KafTele	{
	mes "[Kafra Employee]";
	mes "Por favor elige";
	mes "tu destino.";
	next;
	.@j = select( implode(@wrpC$,":") ) - 1;
	if (@wrpC$[.@j] == "Cancelar")
		return;
	// Consume "Free Ticket for Kafra Transportation" if available.
	// Do not consume if in Guild castle
	if (countitem(7060) > 0 && getarg(0) != 2)
		delitem 7060,1;
	else {
		if (Zeny < @wrpP[.@j]) {
			mes "[Kafra Employee]";
			mes "Lo siento, pero no tienes";
			mes "suficiente zeny para este servicio";
			mes "La tarifa";
			mes "de " + @wrpD$[.@j] + " es " + @wrpP[.@j] + " zeny.";
			close3;
		}
		Zeny -= @wrpP[.@j];
		RESRVPTS += (@wrpP[.@j]/16);
	}
	cutin "", 255;
	if (@wrpD$[.@j] == "Al De Baran") warp "aldebaran",168,112;
	else if (@wrpD$[.@j] == "Alberta") warp "alberta", 117, 56;
	else if (@wrpD$[.@j] == "Comodo") warp "comodo", 209, 143;
	else if (@wrpD$[.@j] == "Comodo Pharos Beacon") warp "cmd_fild07", 127, 134;
	else if (@wrpD$[.@j] == "Geffen") warp "geffen", 120, 39;
	else if (@wrpD$[.@j] == "Izlude") {
		if (checkre(0) == true)
			warp "izlude", 128, 98;
		else
			warp "izlude", 91, 105;
	}
	else if (@wrpD$[.@j] == "Juno") warp "yuno", 158, 125;
	else if (@wrpD$[.@j] == "Mjolnir Dead Pit") warp "mjolnir_02", 99, 351;
	else if (@wrpD$[.@j] == "Morocc") warp "morocc", 156, 46;
	else if (@wrpD$[.@j] == "Orc Dungeon") warp "gef_fild10", 52, 326;
	else if (@wrpD$[.@j] == "Payon") warp "payon", 161, 58;
	else if (@wrpD$[.@j] == "Prontera") warp "prontera", 116, 72;
	else if (@wrpD$[.@j] == "Umbala") warp "umbala", 100, 154;
	end;
}


//===================================================
// Cart Function
//===================================================
function	script	F_KafCart	{
	// Ensure that the class wanting to rent a pushcart is a merchant
	if (BaseClass != Job_Merchant) {
		mes "[Kafra Employee]";
		mes "Lo siento, pero";
		mes "este servicio";
		if (checkre(0) == true)
			mes "está sólo disponible para Merchant classes.";
		else {
			mes "está sólo disponible para Merchants,";
			mes "Blacksmiths, Master Smiths,";
			mes "Alchemists y Biochemists.";
		}
		return 1;
	}
	// Make sure the invoking character does not have a cart already
	else if (checkcart() == true) {
		mes "[Kafra Employee]";
		mes "Tu ya posee";
		mes "un carro equipado.";
		mes "Desafortunadamente, no podemos";
		mes "rentar más de uno";
		mes "por cliente a la vez.";
		return 1;
	}
	// Check if the player has the Pushcart skill
	else if (getskilllv("MC_PUSHCART") == 0) {
		mes "[Kafra Employee]";
		mes "Sólo lo puedes rentar luego de aprender \"Push Cart\" skill.";
		return 1;
	}
	// Consume "Free Ticket for the Cart Service" if available.
	// Do not consume if in Guild castle.
	if (countitem(7061) > 0 && getarg(0) != 2)
		delitem 7061,1;
	else {
		.@rental_fee = getarg(1);
		mes "[Kafra Employee]";
		mes "La tarifa de este servicio";
		mes "es de " + .@rental_fee + " zeny. Deseas";
		mes "rentar uno?";
		next;
		if (select("Rentar un Carro.:Cancelar") == 2)
			return 0;
		if (Zeny < .@rental_fee) {
			mes "[Kafra Employee]";
			mes "Lo siento, pero no";
			mes "tienes suficiente";
			mes "zeny para pagar el servicio.";
			mes "La tarifa es de " + .@rental_fee + " zeny.";
			return 1;
		}
		Zeny -= .@rental_fee;
		RESRVPTS += 48;
	}
	setcart;
	return 1;
}

//===================================================
// Special Reserve Points Function
//===================================================
function	script	F_KafInfo	{
// Uncomment next line to block Kafra Storage Protection
//	.@block = 1;
	if (getarg(0) == 2)// Port Malaya, Rune Knight
		setarray .@menu$[0], "Revisar puntos conseguidos.", "", "", "Cancelar";
	else if (.@block)
		setarray .@menu$[0], "Revisar puntos conseguidos.", "", "Ubicación de Kafras", "Cancelar";
	else
		setarray .@menu$[0], "Revisar puntos conseguidos.", "Storage Password", "Ubicación de Kafras", "Cancelar";
	.@menu_list$ = implode(.@menu$,":");
	while (true) {
		.@j = select(.@menu_list$) - 1;
		switch(.@j) {
		case 0:// Check Special Reserve Points.
			mes "[Kafra Employee]";
			mes "Dejame revisar...";
			mes "" + strcharinfo(0) + "...";
			mes "Ah, en total tienes";
			mes "" + RESRVPTS + " puntos.";
			next;
			mes "[Kafra Employee]";
			mes "Puedes cambiarlos por";
			mes "diferentes recompensas";
			mes "en el Kafra Main Office en Al De Baran. Por favor";
			mes "revisa nuestras recompensas y beneficios.";
			if (getarg(0) == 1)
				return;
			next;
			break;
		case 1:// Storage Password Service
			callfunc("F_SetKafCode","[Kafra Employee]","Kafra Services");
		case 2:// Kafra Employee Locations
			for ( .@i = 0; .@i <= 3; .@i++ )
				viewpoint 1,@viewpX[.@i],@viewpY[.@i],(.@i+1),0xFF00FF;
			next;
			for ( .@i = 0; .@i <= 3; .@i++ )
				viewpoint 2,@viewpX[.@i],@viewpY[.@i],(.@i+1),0xFF00FF;
			break;
		default:
			return;
		}
	}
}

// === End Function ==================================================
//  arg(0): used to determine what message to display.
//  arg(1): used to determine if save message is displayed.
//  arg(2): used to display the name of the area you're saving in.
//===================================================================
function	script	F_KafEnd	{
	.@type = getarg(0);
	mes "[Kafra Employee]";
	if (getarg(1) == true) {// Save
		mes "Tu punto de reaparición";
		mes "ahora es aquí";
		mes "" + getarg(2) + ".";
		mes "Gracias por utilizar";
		mes "nuestros servicios.";
	} else if (.@type == 0 || .@type == 5) {// Generic End
		mes "Nosotros, en Kafra Corporation,";
		mes "siempre buscamos el mejor servicio al mejor precio. Esperamos que tu aventura sea lo que buscabas.";
	} else if (.@type == 1) {// Niflheim End
		percentheal 0,-25;
		mes "^666666Kaffffra n-nunca-aaa";
		mes "se seepa-aaraaan. de...";
		mes "de tu-uuuuu laaa-aado-ooo~^000000";
	} else if (.@type == 2) {// RockRidge Save
		mes "Guardado.";
		mes "Gracias por su patrocinio.";
	}
	close3;
}

//===================================================
// Check Storage Password Function
//===================================================
function	script	F_CheckKafCode	{
	if (!#kafra_code)
		return;
	mes "Ingresa tu contraseña de Storage:";
	input .@code_;
	if (.@code_ != #kafra_code) {
		dispbottom "Contraseña incorrecta.";
		close3;
	}
	@kafcode_try = 0;
	return;
}

// === Set / Change / Clear Storage Password Function ===
// getarg(0): NPC Name
// getarg(1): Company Name
//=======================================================
function	script	F_SetKafCode	{
	.@npc_name$ = getarg(0);
	.@comp_name$ = getarg(1);

	mes .@npc_name$;
	if (#kafra_code == 0) {
		mes "" + .@comp_name$ + " orgullosamente presentamos un nuevo servicio:";
		mes "Seguridad adicional para tu storage con una contraseña.";
		next;
		if (select( "Nueva contraseña -> 5000z", "Cancelar" ) == 1)
			callsub( S_SET, .@npc_name$, .@comp_name$ );
		close3;
	}
	mes "Tu storage está protegido con una contraseña. ¿Qué deseas hacer?";
	next;
	switch( select( "Cambiar contraseña -> 5000z", "Eliminar contraseña -> 1000z", "Cancelar" ) ) {
	case 1:
		mes .@npc_name$;
		mes "Primero ingresa tu ^0000FFvieja contraseña^000000.";
		.@code = callfunc("F_EntKafCode");
		if (!.@code || .@code != #kafra_code) {
			mes "Contraseña incorrecta, por favor intenta denuevo.";
			emotion ET_SCRATCH;
			break;
		}
		next;
		callsub( S_SET, .@npc_name$, .@comp_name$ );
		break;
	case 2:
		mes .@npc_name$;
		mes "Por favor, ingresa tu contraseña.";
		.@code = callfunc("F_EntKafCode");
		if (!.@code) {
			mes "La contraseña no ha sido eliminada.";
			emotion ET_SCRATCH;
			break;
		}
		next;
		mes .@npc_name$;
		if (Zeny < 1000) {
			mes "No tienes suficiente dinero.";
			emotion ET_MONEY;
			break;
		}
		Zeny -= 1000;
		if (.@code == #kafra_code) {
			#kafra_code = 0;
			mes "Hemos eliminado exitosamente tu contraseña de storage.";
			mes "Gracias por usar " + .@comp_name$ + ".";
			emotion ET_THANKS;
		} else {
			mes "Contraseña incorrecta. No regraremos tus 1000z.";
			mes "Por favor, la próxima vez introduce la correcta.";
			emotion ET_SORRY;
		}
		break;
	case 3:
		break;
	}
	close3;

S_SET:
	.@npc_name$ = getarg(0);
	.@comp_name$ = getarg(1);

	mes .@npc_name$;
	mes "Ahora ingresa tu ^FF0000nueva contraseña^000000 para proteger tu storage de ladrones.";
	.@code = callfunc("F_EntKafCode");
	if (!.@code) {
		mes "La nueva contraseña no ha sido cambiada.";
		emotion ET_SCRATCH;
		return;
	}
	next;
	mes .@npc_name$;
	if (Zeny < 5000) {
		mes "No tienes el zeny suficiente.";
		emotion ET_MONEY;
		return;
	}
	Zeny -= 5000;
	#kafra_code = .@code;
	mes "Ya está! Hemos protegido tu storage con una contraseña secreta.";
	mes "Gracias por usar " + .@comp_name$ + ".";
	emotion ET_THANKS;
	return;
}

//===================================================
// Basic Password Validation Function
//===================================================
function	script	F_EntKafCode	{
	mes "Ingresa un numero entre 1000~10000000:";
	@kafcode_try += 1;
	if (@kafcode_try > 10) {
		@kafcode_try = 0;
		logmes "Intentando ajustar la contraseña.";
		return 0;
	}
	if (input(.@code_) == 1) {
		mes "No puedes usar una contraseña tan grande.";
		return 0;
	}
	if (.@code_ < 1000) {
		mes "No debes usar una contraseña tan corta.";
		return 0;
	}
	return .@code_;
}

//===================================================
// Warp Points / View Points Function
//===================================================
function	script	F_KafSet	{
	deletearray @wrpC$[0], getarraysize(@wrpC$);
	deletearray @wrpD$[0], getarraysize(@wrpD$);
	deletearray @wrpP$[0], getarraysize(@wrpP$);
	deletearray @viewpX[0], getarraysize(@viewpX);
	deletearray @viewpY[0], getarraysize(@viewpY);

	.@map$ = strnpcinfo(4);
	if (.@map$ == "prontera") {
		setarray @wrpD$[0], "Izlude", "Geffen", "Payon", "Morocc", "Orc Dungeon", "Alberta";
		setarray @wrpP[0], 600, 1200, 1200, 1200, 1700, 1800;
		setarray @viewpX[0], 151, 29, 282, 152;
		setarray @viewpY[0], 29, 207, 200, 326;
	} else if (.@map$ == "alberta") {
		setarray @wrpP[0], 1200, 1800, 1800;
		setarray @wrpD$[0], "Payon", "Morocc", "Prontera";
		setarray @viewpX[0], 28, 113, 0, 0;
		setarray @viewpY[0], 229, 60, 0, 0;
	} else if (.@map$ == "aldebaran") {
		setarray @wrpP[0], 1200, 1200, 1800, 1700;
		setarray @wrpD$[0], "Geffen", "Juno" , "Izlude", "Mjolnir Dead Pit";
	} else if (.@map$ == "comodo" ) {
		setarray @wrpD$[0], "Morocc", "Comodo Pharos Beacon", "Umbala";
		setarray @wrpP[0], 1800, 1200, 1800;
	} else if (.@map$ == "cmd_fild07") {
		setarray @wrpD$[0], "Comodo", "Morocc";
		setarray @wrpP[0], 1200, 1200;
	} else if (.@map$ == "geffen") {
		setarray @wrpD$[0], "Prontera", "Al De Baran", "Orc Dungeon", "Mjolnir Dead Pit";
		setarray @wrpP[0], 1200, 1200, 1700, 1700;
		setarray @viewpX[0], 120, 203;
		setarray @viewpY[0], 62, 123;
	} else if (.@map$ == "izlude") {
		setarray @wrpD$[0], "Geffen", "Payon", "Morocc", "Al De Baran";
		setarray @wrpP[0], 1200, 1200, 1200, 1800;
	} else if (.@map$ == "morocc") {
		setarray @wrpD$[0], "Prontera", "Payon", "Alberta", "Comodo", "Comodo Pharos Beacon";
		setarray @wrpP[0], 1200, 1200, 1800, 1800, 1200;
		setarray @viewpX[0], 156, 163, 28, 292;
		setarray @viewpY[0], 97, 260, 167, 211;
	} else if (.@map$ == "umbala") {
		setarray @wrpD$[0], "Comodo";
		setarray @wrpP[0], 1800;
	} else if (.@map$ == "payon") {
		setarray @wrpD$[0], "Prontera", "Alberta", "Morocc";
		setarray @wrpP[0], 1200, 1200, 1200;
	} else if (.@map$ == "yuno") {
		setarray @wrpD$[0], "Al De Baran";
		setarray @wrpP[0], 1200;
		setarray @viewpX[0], 328, 278, 153, 0;
		setarray @viewpY[0], 108, 221, 187, 0;
	} else if (.@map$ == "job3_rune01") {
		setarray @wrpD$[0], "Izlude", "Geffen", "Payon", "Morocc", "Alberta";
		setarray @wrpP[0], 600, 1200, 1200, 1200, 1800;
	}

	.@warp_size = getarraysize(@wrpD$);

	// VIP pricing varies across the regional servers; this is most practical.
	if (VIP_SCRIPT && !vip_status(VIP_STATUS_ACTIVE)) {
		for ( .@i = 0; .@i < .@warp_size; .@i++ )
			@wrpP[.@i] *= 2;
	}

	for ( .@i = 0; .@i < .@warp_size; .@i++ )
		@wrpC$[.@i] = @wrpD$[.@i] + " -> " + @wrpP[.@i] + " z";
	@wrpC$[ .@warp_size ] = "Cancel";
	return;
}
