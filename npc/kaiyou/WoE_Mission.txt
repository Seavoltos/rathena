//===== rAthena Script =======================================
//= Guild Mission - Core Script
//===== Description: =========================================
//= Template for guild mission added in episode 14.3
//===== Changelogs: ==========================================
//= [Official Conversion]
//= 1.0 First version [Secretdataz]
//= 1.1 Fixed potential exploit from original Aegis script. [Secretdataz]
//============================================================

-	script	gld_mission#core	-1,{
function brief;
function mob_brief;
function calcexp;
function calcjobexp;

	if (!checkweight(1201,3)){
		mes "Tienes demasiados elementos para continuar con la Quest.";
		mes "Por favor, aligere su carga y vuelva a intentarlo.";
		close;
	}

	.@zone$ = strnpcinfo(2);
	if(.@zone$ == "gqaldeg"){
		.@zoneid = 3;
		.@edition = 1;
	} else if(.@zone$ == "gqaru"){
		.@zoneid = 4;
		.@edition = 2;
	} else if(.@zone$ == "gqgefg"){
		.@zoneid = 2;
		.@edition = 1;
	} else if(.@zone$ == "gqpayg"){
		.@zoneid = 1;
		.@edition = 1;
	} else if(.@zone$ == "gqprtg"){
		.@zoneid = 0;
		.@edition = 1;
	} else if(.@zone$ == "gqsch"){
		.@zoneid = 5;
		.@edition = 2;
	} else if(.@zone$ == "gqtealde"){
		.@zoneid = 6;
		.@edition = 3;
	} else if(.@zone$ == "gqteprt"){
		.@zoneid = 7;
		.@edition = 3;
	} else {
		// Custom error message.
		debugmes "Una misión del gremio se ha llamado desde una región desconocida [" + .@zone$ + "].";
		end;
	}
	.@npcname$ = .npcname$[.@zoneid];

	mes .@npcname$;
	mes "Proporcionamos misiones y misiones diarias que puedes completar en la región de " + .region$[.@zoneid] + ".";
	mes "Hay misiones diarias sencillas, así como misiones que debes completar únicamente durante las horas de WoE. Así que piénsalo~";
	next;
	switch(select("Conquistar la región de " + .region$[.@zoneid], "Misiones diarias de Guild Dungeon", "Sobre las Quests", "No las necesito.")){
		case 1: // Conquering.
			.@gid = getcharid(2);
			if(.@gid && is_guild_leader() == true){
				.@time_check1 = checkquest(.conquer_delay_questid[.@zoneid], PLAYTIME);
				if(.@time_check1 == 0){
					mes .@npcname$;
					mes "¡Ha pasado menos de una hora desde la última vez que lo comprobamos!";
					mes "Vuelve cuando termine el tiempo de espera.";
					next;
					mes .@npcname$;
					mes "Si tienes la suerte de tu lado, tendrás buenos resultados.";
					close;
				} else if(.@time_check1 == 2){
					erasequest .conquer_delay_questid[.@zoneid];
					mes .@npcname$;
					mes "He confirmado que el tiempo de espera para las misiones de conquista ha terminado.";
					mes "Eliminaré los registros innecesarios por ti.";
					close;
				} else {
					.@siege_check = (.@edition == 1 ? agitcheck() : .@edition == 2 ? agitcheck2() : agitcheck3());
					.@time = atoi(gettimestr("%H%M",4));
					.@after_time = ((.weekday[.@zoneid] == gettime(4)) && ((.@time > .start_time[.@zoneid]) && (.@time < .end_time[.@zoneid])));

					if(.@siege_check && .@after_time){
						mes .@npcname$;
						mes "Según ^4d4dffel número de castillos que tu Guild haya conquistado en este mismo momento,^000000 te daré una recompensa.";
						mes "¿Quieres comprobarlo ahora mismo? Eres consciente de que ^4d4dffel número puede cambiar incluso mientras hablamos,^000000, ¿verdad?";
						next;
						if(select("Volveré más tarde.","Comprobemos ahora mismo!") == 1){
							mes .@npcname$;
							mes "Bien. La vida se trata de sincronización.";
							mes "Vuelve cuando más brille.";
							close;
						} else {
							.@total = 0;
							for(.@i = 0; .@i < 5; ++.@i){
								.@total += (.@gid == getcastledata(.castle$[.@i+.@zoneid*5],CD_GUILD_ID));
							}

							if(!.@total){
								mes .@npcname$;
								mes "Desafortunadamente, no hay ningun castillo que tu Guild haya conquistado.";
								mes "Intenta otra vez!";
								close;
							} else {
								mes .@npcname$;
								if(.@total == 5)
									mes "Increíble.";
								else
									mes "Actualmente, el número total de castillos que tu Guild ha conquistado";
								for(.@i = 0; .@i < 5; ++.@i){
									mes getcastlename(.castle$[.@i+.@zoneid*5]) + (.@gid == getcastledata(.castle$[.@i+.@zoneid*5],CD_GUILD_ID) ? ": ^4d4dffOcupado^000000" : "");
								}
								if(.@total == 5)
									mes "Tu Guild ha conquistado " + .region$[.@zoneid] + "!";
								else
									mes "es " + .@total + "!";
								next;
								mes .@npcname$;
								mes "Te daré una recompensa en consecuencia. Espero que lo aproveches bien.";
								mes "Tienes una hora de espera hasta el próximo informe. Tenlo en cuenta y vuelve a intentarlo.";
								setquest .conquer_delay_questid[.@zoneid];
								getitem 6489,.@total; //Cats_Invest_Certif
								getitem 6615,.@total; //Siege_Guild_Coin
								getitem 12888,.@total; //Siege_Kit_Box
								close;
							}
						}
					} else {
						mes .@npcname$;
						mes "Lo siento, pero puedes completar esta misión sólo durante las horas de WoE. Me temo que no puedo hacer nada aquí.";
						close;
					}
				}
			} else {
				mes .@npcname$;
				mes "Lo siento, pero las misiones de conquista son sólo para Guild Master.";
				mes "En su lugar, los miembros deberían probar las misiones diarias de las mazmorras del gremio.";
				close;
			}
			break;
		case 2: // Daily Quests
			mes .@npcname$;
			mes "Estas son misiones que puedes completar en las mazmorras del gremio de " + .region$[.@zoneid] + ".";
			mes "Puedes cancelarlos si lo deseas. Siéntete libre de desafiarte a ti mismo.";
			next;
			.@cancel_index = (.@edition == 1 ? 3 : 2);
			for(.@i = 0; .@i < 3; ++.@i){
				if(.daily_hunting_questid[.@zoneid*3 + .@i])
					.@menu$ = .@menu$ + .region$[.@zoneid] + " Mission " + (.@i+1) + (isbegin_quest(.daily_hunting_questid[.@zoneid*3 + .@i]) ? " ^4d4dffRevisar^000000" : "") + ":";
			}
			.@sel = select(.@menu$) - 1;
			.@index = .@zoneid*3 + .@sel;
			if(.@sel == .@cancel_index){
				mes .@npcname$;
				mes "No necesitas apresurarte ya que estas misiones se llevan a cabo en las Guild Dungeon.";
				mes "No dudes en probarlo cuando quieras.";
				close;
			}
			if(BaseLevel < .level_req[.@index]){
				mes .@npcname$;
				mes "Hmm, desafortunadamente, esta misión está limitada a usuarios con ^4d4dfflevel " + .level_req[.@index] + "^000000 o más alto.";
				mes "Tu nivel no es lo suficientemente alto.";
				close;
			}
			.@hunting = checkquest(.daily_hunting_questid[.@index], HUNTING);
			.@playtime = checkquest(.daily_delay_questid[.@index], PLAYTIME);
			if(.@hunting > -1){
				if(.@hunting == 2){
					mes .@npcname$;
					mes "Oh, has hecho un buen trabajo.";
					mes "No es mucho, pero espero que sea útil.";
					setquest .daily_delay_questid[.@index];
					erasequest .daily_hunting_questid[.@index];
					getexp calcexp(.@zoneid,.@index),calcjobexp(.@edition);
					getitem 6489,1; //Cats_Invest_Certif
					getitem 6615,1; //Siege_Guild_Coin
					getitem 12888,1; //Siege_Kit_Box
				} else {
					mes .@npcname$;
					mes "¿Mmm? Parece que aún no has completado la misión...";
					mes "¿Hay algún problema?";
					next;
					if(select("No.","Abandonar la misión.") == 1){
						mes .@npcname$;
						mes "No estoy seguro de cuánto tiempo podrás usar la Guild Dungeon, pero buena suerte.";
						close;
					} else {
						mes .@npcname$;
						mes "Bueno, nadie te obliga.";
						mes "Haz lo que quieras hacer.";
						mes "Cancelaré la misión entonces.";
						erasequest .daily_hunting_questid[.@index];
						close;
					}
				}
			} else {
				if(.@playtime == 0 || .@playtime == 1){
					mes .@npcname$;
					mes "La regla está establecida aquí para que solo puedas completar una misión cada día.";
					mes "Me gustaría que volvieras cuando termine el tiempo de espera.";
					close;
				} else if(.@playtime == 2){
					erasequest .daily_delay_questid[.@index];
					mes .@npcname$;
					mes "He confirmado que el tiempo de espera para esta misión ha terminado.";
					mes "Eliminaré los registros utilizados para la confirmación.";
					mes "¡Ahora pruébalo para completar la misión!";
					close;
				} else {
					mes .@npcname$;
					mes "Este es el " + .ordinal$[.@sel] + " misión en " + .region$[.@zoneid] + ".";
					brief(.daily_hunting_questid[.@index]);
					next;
					mes .@npcname$;
					if(mob_brief(.daily_hunting_questid[.@index]))
						mes "Te recompensaré en consecuencia al completar esta misión.";
					else
						mes "A cambio te daré puntos de experiencia.";
					next;
					if(select("Aceptarlo.","Rechazarlo.") == 1){
						mes .@npcname$;
						mes "La entrada a la Guild Dungeon está restringida. Pero tampoco es que no puedas encontrar una manera de llegar allí.";
						mes "Rezaré por tu éxito en la lucha contra esos monstruos.";
						setquest .daily_hunting_questid[.@index];
						close;
					} else {
						mes .@npcname$;
						mes "Bueno, haz lo que quieras.";
						close;
					}
				}
			}
			break;
		case 3: // About quests
			mes .@npcname$;
			mes "No es nada difícil.";
			mes "Doy una recompensa ^4d4dff dependiendo de cuantos Castillos hayas conquistado.^000000";
			mes "^4d4dffEl tipo y la calidad de la recompensa dependen del número de Castillos conquistados en el momento en que reviso.^000000";
			next;
			mes .@npcname$;
			mes "Y, por supuesto, solo reviso durante las horas de WoE.";
			mes "^4d4dffA la recepción de una recompensa le sigue una hora de espera. Así que será mejor que también averigües cuál es el momento adecuado.^000000";
			next;
			mes .@npcname$;
			mes "Si eres el Guild Master de una Guild que actualmente participa en batallas de WoE, deberías intentarlo.";
			next;
			mes .@npcname$;
			mes "Las misiones diarias de las Guild Dungeon consisten en misiones de combate que puedes completar en las Guild Dungeon.";
			mes "Es sencillo.";
			close;
		case 4: // I don't need it.
			mes .@npcname$;
			mes "¡Realmente eres otra cosa~!";
			close;
	}
	end;

OnInit:
	setarray .castle$[0],
		"prtg_cas01","prtg_cas02","prtg_cas03","prtg_cas04","prtg_cas05",
		"payg_cas01","payg_cas02","payg_cas03","payg_cas04","payg_cas05",
		"gefg_cas01","gefg_cas02","gefg_cas03","gefg_cas04","gefg_cas05",
		"aldeg_cas01","aldeg_cas02","aldeg_cas03","aldeg_cas04","aldeg_cas05",
		"arug_cas01","arug_cas02","arug_cas03","arug_cas04","arug_cas05",
		"schg_cas01","schg_cas02","schg_cas03","schg_cas04","schg_cas05",
		"te_aldecas1","te_aldecas2","te_aldecas3","te_aldecas4","te_aldecas5",
		"te_prtcas01","te_prtcas02","te_prtcas03","te_prtcas04","te_prtcas05";
	setarray .npcname$[0],
		"[Altir]","[Alshine]","[Denev]","[Tarazed]","[Mirah]","[Almark]","[Becrux]","[Acrux]";
	setarray .region$[0],
		"Valkyrie Realm","Greenwood Lake","Britoria","Luina","Valfreyja","Nidhoggur","Kafragarten","Gloria";
	setarray .weekday[0], // Day of the week. 0 = Sunday, 6 = Saturday.
		0,0,0,0,0,0,6,6;
	setarray .start_time[0],
		2200,2200,2200,2200,2200,2200,2200,2200;
	setarray .end_time[0],
		2230,2230,2230,2230,2230,2230,2230,2230;
	setarray .conquer_delay_questid[0], // Quest ID for cooldowns
		7517,7520,7519,7518,7522,7521,7524,7523;
	setarray .level_req[0], // Level requirement for quests. There are 2-3 quests per region
		80,80,80,	//prt
		80,80,80,	//pay
		80,80,80,	//gef
		80,80,80,	//alde
		80,80,0,	//aru
		80,80,0,	//sch
		70,70,0,	//tealde
		70,70,0;	//teprt
	setarray .max_level[0], // Exp increase cap for quests. 0 for unlimited/not exist
		0,0,0,	//prt
		0,0,0,	//pay
		0,0,0,	//gef
		0,0,0,	//alde
		0,0,0,	//aru
		0,0,0,	//sch
		0,0,0,	//tealde
		0,0,0;	//teprt
	setarray .daily_hunting_questid[0], //Quest ID for daily quests.
		7525,7526,7527,	//prt
		7534,7535,7536,	//pay
		7531,7532,7533,	//gef
		7528,7529,7530,	//alde
		7539,7540,0,	//aru
		7537,7538,0,	//sch
		7561,7562,0,	//tealde
		7541,7542,0;	//teprt
	setarray .daily_delay_questid[0],	//Quest ID for mob hunting check.
		7543,7544,7545,	//prt
		7552,7553,7554,	//pay
		7549,7550,7551,	//gef
		7546,7547,7548,	//alde
		7557,7558,0,	//aru
		7555,7556,0,	//sch
		7563,7564,0,	//tealde
		7559,7560,0;	//teprt
	setarray .ordinal$[0],"Primer","Segundo","Tercero";
	end;

	function brief {
		switch(getarg(0)){
			case 7527:
			case 7530:
			case 7533:
			case 7536:
				mes "Se trata de lidiar con las poderosas criaturas que aparecen en el Abyss Gate.";
				break;
			default:
				mes "Es para eliminar los monstruos que aparecen en la mazmorra del gremio.";
				break;
		}
		return;
	}

	function mob_brief {
		switch(getarg(0)){
			case 7525:
				mes "Deberás cazar 150 entre Caterpillar, Creamy Fear, Gullinbursti o Leib Olmai.";
				break;
			case 7526:
				mes "Deberás cazar 150 tipos de Kobold y 1 Atroce.";
				break;
			case 7527:
				mes "^4d4dffDeberás cazar al furioso 'Baphomet'.^000000";
				return 1;
			case 7528:
				mes "Deberás cazar 150 entre Ancient Worm, Giant Hornet, Owl Baron, Killer Mantis o Giant Spider.";
				break;
			case 7529:
				mes "Deberás cazar 150 entre Killer Mantis, Caterpillar o Owl Baron, y una Maya.";
				break;
			case 7530:
				mes "^4d4dffDeberás cazar a 'Drácula'.^000000";
				return 1;
			case 7531:
				mes "Deberás cazar 150 entre Zombie Master, Wraith Dead o Mini Demon.";
				break;
			case 7532:
				mes "Deberás cazar 150 entre Dark Frame o Phendark, y 1 Doppelganger.";
				break;
			case 7533:
				mes "^4d4dffDeberás cazar al 'Turtle General'.^000000";
				return 1;
			case 7534:
				mes "Deberás cazar 150 entre Skeleton General, Am Mut o Gajomart.";
				break;
			case 7535:
				mes "Deberás cazar 150 entre Leib Olmai o Gullinbursti, y una Moonlight Flower.";
				break;
			case 7536:
				mes "^4d4dffDeberás cazar a la temible 'Moonlight Flower'.^000000";
				return 1;
			case 7537:
				mes "Deberás cazar 100 entre Zakudam y Hell Apocalipsis.";
				break;
			case 7538:
				mes "Deberás cazar 100 entre Heavy Metaling y Cobalt Mineral.";
				break;
			case 7539:
				mes "Deberás cazar 100 entre Banshee Master y Beholder Master.";
				break;
			case 7540:
				mes "Deberás cazar 100 entre Aunoe y Fanat.";
				break;
		}
		return 0;
	}
	
	function calcexp {
		.@zoneid = getarg(0);
		.@index = getarg(1);
		.@maxlevel = .max_level[.@index];
		.@isboss = (.@zoneid < 4 && !((.@index+1)%3));
		
		if(!.@isboss && BaseLevel > .@maxlevel){
			return 10000 * (100 + ((.@maxlevel) * 3));
		} else {
			return 10000 * (100 + ((BaseLevel) * 3)) * (1 + .@isboss);
		}
	}
	
	function calcjobexp {
		.@edition = getarg(0);
		
		if(.@edition == 3){
			if(jobcanentermap("te_prtcas01")){
				if (JobLevel > 50)
					return 10000 * (50 + ((JobLevel - 50) * 3));
				else
					return 50000;
			} else {
				debugmes "Unexpected case for Job: " + Class + "(" + jobname(Class) + ") for gld_mission#core::calcjobexp";
				return 0;
			}
		} else if(.@edition == 2 ) {
			if(JobLevel > 50)
				return 10000 * (50 + ((JobLevel - 50) * 3));
			else
				return 30000;
		} else {
			return 50000 * JobLevel;
		}
		return 0;
	}
}

alde_gld,176,163,5	duplicate(gld_mission#core)	Luina Training Instructor#gqaldeg	4_M_HUMAN_02
gef_fild13,197,242,3	duplicate(gld_mission#core)	Britoria Training Instructor#gqgefg	4_M_HUMAN_02
pay_gld,198,178,5	duplicate(gld_mission#core)	Greenwood Lake Training Instructor#gqpayg	4_M_HUMAN_02
prt_gld,125,149,3	duplicate(gld_mission#core)	Valkyrie Realm Training Instructor#gqprtg	4_M_HUMAN_02

aru_gld,96,203,3	duplicate(gld_mission#core)	Valfreyja Training Instructor#gqaru	4_M_HUMAN_02
sch_gld,270,117,3	duplicate(gld_mission#core)	Nidhoggur Training Instructor#gqsch	4_M_HUMAN_02